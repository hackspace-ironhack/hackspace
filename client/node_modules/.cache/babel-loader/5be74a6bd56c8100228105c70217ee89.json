{"ast":null,"code":"var _jsxFileName = \"/Users/Thi/Desktop/FinalProject/social-network-app/hackspace/client/src/components/ChatPage.js\";\nimport React from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass ChatPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      typedMessage: \"\",\n      messages: []\n    };\n    this.userId = this.props.match.params.id;\n    this.intervalId = null;\n\n    this.componentDidMount = () => {\n      this.loadMessages();\n      this.intervalId = window.setInterval(this.loadMessages, 5000);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.intervalId);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        typedMessage: event.target.value\n      });\n    };\n\n    this.onSend = event => {\n      event.preventDefault();\n      axios.post(\"/api/chat/messages/\".concat(this.userId), {\n        message: this.state.typedMessage\n      }).then(response => {\n        const success = response.data.success;\n\n        if (success) {\n          this.loadMessages(true);\n        }\n      });\n    };\n\n    this.loadMessages = (clearInput = false) => {\n      axios.get(\"/api/chat/messages/\".concat(this.userId)).then(response => {\n        const messages = response.data.messages;\n        console.log(messages);\n        this.setState({\n          messages: messages,\n          typedMessage: clearInput ? \"\" : this.state.typedMessage\n        });\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.messages.map(message => React.createElement(Card, {\n        key: message._id,\n        className: this.props.user && this.props.user._id === message.from._id ? \"text-right\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, message.from.username), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, message.message)))), React.createElement(Form, {\n        onSubmit: this.onSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter message\",\n        onChange: this.handleChange,\n        value: this.state.typedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    };\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/Users/Thi/Desktop/FinalProject/social-network-app/hackspace/client/src/components/ChatPage.js"],"names":["React","Card","Container","Form","axios","ChatPage","Component","state","typedMessage","messages","userId","props","match","params","id","intervalId","componentDidMount","loadMessages","window","setInterval","componentWillUnmount","clearInterval","handleChange","event","setState","target","value","onSend","preventDefault","post","message","then","response","success","data","clearInput","get","console","log","render","map","_id","user","from","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass ChatPage extends React.Component {\n  state = {\n    typedMessage: \"\",\n    messages: []\n  }\n\n  userId = this.props.match.params.id;\n  intervalId = null\n  \n  componentDidMount = () => {\n    this.loadMessages();\n    this.intervalId = window.setInterval(this.loadMessages, 5000);\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.intervalId);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      typedMessage: event.target.value\n    })\n  }\n\n  onSend = (event) => {\n    event.preventDefault();\n    axios.post(`/api/chat/messages/${this.userId}`, { message: this.state.typedMessage })\n      .then(response => {\n        const { success } = response.data;\n        if (success) {\n          this.loadMessages(true);\n        }\n      });\n  }\n\n  loadMessages = (clearInput = false) => {\n    axios.get(`/api/chat/messages/${this.userId}`)\n      .then(response => {\n        const { messages } = response.data;\n        console.log(messages);\n        this.setState({\n          messages: messages,\n          typedMessage: clearInput ? \"\" : this.state.typedMessage,\n        });\n      });\n  }\n\n  render = () => {\n    return (\n      <Container>\n        {this.state.messages.map((message) => \n          <Card key={message._id} className={this.props.user && this.props.user._id === message.from._id ? \"text-right\" : \"\"}>\n            <Card.Body>\n              <Card.Title>\n                {message.from.username}\n              </Card.Title>\n              <Card.Text>\n                {message.message}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n        <Form onSubmit={this.onSend}>\n          <Form.Group>\n            <Form.Control type=\"text\" placeholder=\"Enter message\" onChange={this.handleChange} value={this.state.typedMessage}/>\n          </Form.Group>\n        </Form>\n    </Container>);\n  }\n}\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}