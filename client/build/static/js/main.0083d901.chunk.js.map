{"version":3,"sources":["services/api.js","components/Navbar.js","components/About.js","components/PostList.js","components/AddPost.js","components/Post.js","components/Profile.js","components/AddProject.js","components/Likebutton.js","components/Signup.js","components/Login.js","components/ChatPage.js","components/ChatList.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","axios","post","then","response","data","catch","err","login","handleLogout","props","delete","setUser","Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","user","Item","to","onClick","About","state","name","city","skills","hobbies","handleChange","event","target","value","setState","handleSubmit","preventDefault","patch","_id","loadUser","history","push","console","log","Form","onSubmit","this","Group","Label","htmlFor","Control","type","onChange","description","Button","Component","PostList","posts","map","obj","i","key","AddPost","getData","Post","componentDidMount","get","Profile","profile","userId","match","params","loadData","undefined","followUser","friend","render","Signup","email","message","styles","display","flexDirection","style","Alert","Login","ChatPage","typedMessage","messages","intervalId","loadMessages","window","setInterval","componentWillUnmount","clearInterval","onSend","success","clearInput","Container","Card","from","Body","Title","Text","placeholder","React","ChatList","friends","loadFriends","ListGroup","SearchPage","query","results","users","length","item","ListGroupItem","App","exact","path","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0083d901.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst signup = (username, password) => {\r\n  return axios.post('/api/auth/signup',\r\n    { username, password }).then(response => {\r\n      return response.data;\r\n    }).catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios.post('/api/auth/login',\r\n    { username, password })\r\n    .then(response => {\r\n      return response.data;\r\n    }).catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  return axios\r\n    .delete(\"/api/auth/logout\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      return err.response.data;\r\n    });\r\n};\r\n\r\nexport { signup, login, logout };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav} from \"react-bootstrap\";\r\n\r\nimport { logout } from \"../services/api\";\r\n\r\nconst handleLogout = props => {\r\n  logout().then(() => {\r\n    props.setUser(null);\r\n  });\r\n};\r\n\r\nconst handleProject = props => {\r\n  // project().then(()=>{\r\n  //   props.setUser()\r\n  // });\r\n  \r\n};\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    // <Nav className=\"nav justify-content-end\" bg=\"dark\" variant=\"light\">\r\n    //   {/* {props.user && <Nav.Brand>Welcome, {props.user.username}</Nav.Brand>} */}\r\n    //   <Nav.Brand>\r\n    //     <Link to=\"/signup\"></Link>\r\n    //   </Nav.Brand>\r\n\r\n\r\n    //   {props.user ? (\r\n    //     <>\r\n    //   <Nav.Brand>\r\n    //     <Link to=\"/projects\" onClick = {() =>handleProject(props)}>Projects</Link>\r\n    //   </Nav.Brand>\r\n        \r\n    //   <Nav.Brand>\r\n    //     <Link to=\"/chat\">Chat</Link>\r\n    //   </Nav.Brand>\r\n\r\n    //   <Nav.Brand>\r\n    //     <Link to=\"/todolist\">Things to do</Link>\r\n    //   </Nav.Brand> \r\n\r\n    //   <Nav.Brand>\r\n    //     <Link to=\"/\" onClick={() => handleLogout(props)}> Logout </Link>\r\n    //   </Nav.Brand>\r\n    //     </>\r\n    //   ) : (\r\n    //     <>\r\n    //     {/* div to get the 1st page */}\r\n    //     {/* delete the nav bar */}\r\n    //       <Nav.Brand>\r\n    //         <Link to=\"/signup\">Signup</Link>\r\n    //       </Nav.Brand>\r\n    //       <Nav.Brand>\r\n    //         <Link to=\"/login\">Login</Link>\r\n    //       </Nav.Brand>\r\n          \r\n    //     </>\r\n    //   )}\r\n    // </Nav>\r\n\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"/\">Hackspace</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <div className=\"salutation\">\r\n    {props.user && <Nav.Item>Welcome, {props.user.username}!</Nav.Item>}\r\n          </div>\r\n          {props.user ? (\r\n            //  LOGGED USER\r\n            <>\r\n              <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/profile\">Profile</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/projects\" onClick = {() =>handleProject(props)}>My Work</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/chat\">Chat</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/todolist\">Things to do</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/search\">Find Users</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n              <Link className=\"bar-links\" to=\"/\" onClick={() => handleLogout(props)}> Logout </Link>\r\n              </Nav.Item>\r\n            </>\r\n          ) : (\r\n              // NO LOGGED USER\r\n              <>\r\n                <Nav.Item>\r\n                  <Link className=\"bar-links\" to=\"/signup\">Signup</Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                <Link className=\"bar-links\" to=\"/login\">Login</Link>\r\n                </Nav.Item>\r\n              </>\r\n            )}\r\n    \r\n    </Nav>\r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","// a form says user to add info after sign in\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default class About extends Component{\r\n     state = {\r\n       name:\"\",\r\n       city:\"\",\r\n       skills:\"\",\r\n       hobbies:\"\"\r\n     };\r\n\r\n     handleChange = event => {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n      this.setState({\r\n      [name]: value\r\n      });\r\n    }; \r\n   \r\n\r\n    handleSubmit = event => {\r\n      event.preventDefault();\r\n  \r\n      // http://localhost:5555/api/projects\r\n      axios\r\n        .patch(`/api/about/${this.props.user._id}`, {\r\n          name: this.state.name,\r\n          city: this.state.city,\r\n          skills: this.state.skills,\r\n          hobbies:this.state.hobbies       \r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            name: \"\",\r\n            city: \"\",\r\n            skills:\"\",\r\n            hobbies:\"\"\r\n          });\r\n          // updating parent's component's state\r\n          this.props.loadUser();\r\n          this.props.history.push(\"/profile\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  render() {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n           <Form.Group>\r\n           <Form.Label htmlFor=\"name\">Name(as you like to see in your profile): </Form.Label>\r\n             <Form.Control\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"city\">City: </Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"city\"\r\n              id=\"city\"\r\n              value={this.state.description}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"skills\">Skills: </Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"skills\"\r\n              id=\"skills\"\r\n              value={this.state.skills}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"hobbies\">Interests: </Form.Label>\r\n            <Form.Control\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"hobbies\"\r\n              id=\"hobbies\"\r\n              value={this.state.hobbies}\r\n            />\r\n          </Form.Group>\r\n  \r\n          <Button type=\"submit\">Add to your profile</Button>\r\n        </Form>\r\n      );\r\n    }\r\n  }\r\n  ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostList = props => {\r\n  console.log(\"posts Lit\", props)\r\n  return (\r\n    <div>\r\n      {!props.posts ? \"\" :  <h2>My Posts</h2>}\r\n\r\n      {!props.posts ? \"\" : props.posts.map((obj,i) => {\r\n        return (\r\n          <div key={i}>\r\n              <h2>{obj.post}</h2>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\n\r\nexport default class AddPost extends Component {\r\n   \r\n    state ={\r\n      post : \"\",\r\n    };\r\n\r\n    handleChange = event => {\r\n      const value = event.target.value;\r\n      const name = event.target.name;\r\n        this.setState({\r\n        [name]: value\r\n      });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n      event.preventDefault();\r\n      // http://localhost:5555/api/profile\r\n      axios\r\n        .post(\"/api/post\", {\r\n          post: this.state.post,\r\n          // owner:this.props.user\r\n        })\r\n        .then(() => {\r\n          this.setState({\r\n            post: \"\"\r\n          });\r\n          // updates the parent's component's state, which causes new props to be passed to the <ProjectList/> component\r\n          this.props.getData();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Form onSubmit = {this.handleSubmit}>\r\n          <Form.Group> \r\n            <Form.Label htmlFor=\"post\">Your Post: </Form.Label>\r\n              <Form.Control\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              id=\"post\"\r\n              name=\"post\"\r\n              value={this.state.post}\r\n            />\r\n            </Form.Group>\r\n          <Button type=\"submit\">Post your thought</Button>\r\n        </Form>\r\n      );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport PostList from \"./PostList\";\r\nimport AddPost from \"./AddPost\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Post extends Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n  \r\n  componentDidMount=() => {\r\n    this.getData();\r\n  };\r\n\r\n  getData = () => {\r\n    axios.get(\"/api/post\")\r\n    .then (response => {\r\n      this.setState({\r\n        posts:response.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\nrender(){\r\n  console.log(\"posts > \", this.state)\r\n  return (\r\n    <div className=\"post-container\">\r\n      <AddPost getData = {this.getData}/>\r\n      <PostList posts = {this.state.posts}/>\r\n    </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport Post from \"./Post\";\r\nimport AddProject from \"./AddProject\";\r\nimport Likebutton from \"./Likebutton\";\r\nimport axios from \"axios\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default class Profile extends Component {\r\n\r\n    state = {\r\n        profile: {}\r\n    }\r\n\r\n    userId = this.props.match.params.id;\r\n\r\n    componentDidMount = () => {\r\n        this.loadData();\r\n    }\r\n\r\n  loadData = () => {\r\n      // only loads a different user if an id is passed in the url\r\n      if (this.userId !== undefined) {\r\n          console.log(this.userId);\r\n          axios.get(`/api/user/${this.userId}`).then(response => this.setState({profile: response.data}));\r\n      }\r\n    }\r\n\r\n    followUser = () => {\r\n        axios.post('/api/user/friends', {friend: this.userId})\r\n    }\r\n\r\n  render = () => {\r\n    // Choses between your own profile or someone elses.\r\n    const user = this.userId !== undefined ? this.state.profile : this.props.user;\r\n    // if showing your own profile, it uses data from the props\r\n    return (\r\n      <div>\r\n        {user && (\r\n          \r\n          <div>\r\n            <ul>\r\n              <li>Name: {user.name}</li>\r\n              <li>City: {user.city}</li>\r\n              <li>Skills: {user.skills}</li>\r\n              <li>Hobbies: {user.hobbies}</li>\r\n            </ul>\r\n              {this.props.user && user._id === this.props.user._id &&\r\n                  <Post getData={this.loadData} user={user} />\r\n              }\r\n              {this.props.user && user._id !== this.props.user._id &&\r\n                <Button onClick={this.followUser}>Follow</Button>\r\n              }\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default class AddProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // const value =\r\n    //   event.target.type === \"checkbox\"\r\n    //     ? event.target.checked\r\n    //     : event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    // http://localhost:5555/api/projects\r\n    axios\r\n      .post(\"/api/projects\", {\r\n        title: this.state.title,\r\n        description: this.state.description\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          title: \"\",\r\n          description: \"\"\r\n        });\r\n        // updates the parent's component's state, which causes new props to be passed to the <ProjectList/> component\r\n        this.props.getData();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        {/* all groups (label + input) are grouped in a Form.Group */}\r\n        <Form.Group>\r\n          {/* <label></label> */}\r\n          <Form.Label htmlFor=\"title\">Title: </Form.Label>\r\n          {/* <input /> */}\r\n          <Form.Control\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"description\">Description: </Form.Label>\r\n          <Form.Control\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            value={this.state.description}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">Add Project</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass LikeButton extends Component {\r\n  state = {\r\n    counter: 0,\r\n    str:\"Likes\"\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1,\r\n      str: this.state.counter===0 ? \"Like\" : \"Likes\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return (\r\n      <button onClick={this.handleClick}>\r\n        {this.state.counter} {this.state.str}\r\n      </button>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default LikeButton;","import React, { Component } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { signup } from \"../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email:\"\",\r\n    message: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { username, password } = this.state;\r\n\r\n    signup(username, password).then(data => {\r\n      if (data.message) {\r\n        this.setState({\r\n          message: data.message,\r\n          username: \"\",\r\n          password: \"\"\r\n        });\r\n      } else {\r\n        // successfully signed up\r\n        // update the state for the parent component\r\n        this.props.setUser(data);\r\n        this.props.history.push(\"/about\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const styles = {\r\n      signup:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n      },\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"signup-container\">\r\n        \r\n        <div style={styles.signup}>\r\n          <h1>Together we are stronger</h1>\r\n        </div>\r\n        <div style={styles.signup}>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              id=\"username\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"email\">Email: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              id=\"username\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              id=\"password\"\r\n            />\r\n          </Form.Group>\r\n          {this.state.message && (\r\n            <Alert variant=\"danger\">{this.state.message}</Alert>\r\n          )}\r\n          <Button variant=\"secondary\" type=\"submit\">Signup</Button>\r\n          \r\n        </Form>\r\n          Already have an account?\r\n          \r\n          <Button variant=\"secondary\" type=\"submit\">\r\n            <Link to = \"/login\">Login</Link></Button>\r\n        </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { login } from \"../services/api\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    message: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { username, password } = this.state;\r\n\r\n    login(username, password).then(data => {\r\n      if (data.message) {\r\n        this.setState({\r\n          message: data.message,\r\n          username: \"\",\r\n          password: \"\"\r\n        });\r\n      } else {\r\n        // successfully logged in\r\n        // update the state for the parent component\r\n        this.props.setUser(data);\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              id=\"username\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              id=\"password\"\r\n            />\r\n          </Form.Group>\r\n          {this.state.message && (\r\n            <Alert variant=\"danger\">{this.state.message}</Alert>\r\n          )}\r\n          <Button type=\"submit\">Login</Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass ChatPage extends React.Component {\r\n  state = {\r\n    typedMessage: \"\",\r\n    messages: []\r\n  }\r\n\r\n  userId = this.props.match.params.id;\r\n  intervalId = null\r\n  \r\n  componentDidMount = () => {\r\n    this.loadMessages();\r\n    this.intervalId = window.setInterval(this.loadMessages, 5000);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      typedMessage: event.target.value\r\n    })\r\n  }\r\n\r\n  onSend = (event) => {\r\n    event.preventDefault();\r\n    axios.post(`/api/chat/messages/${this.userId}`, { message: this.state.typedMessage })\r\n      .then(response => {\r\n        const { success } = response.data;\r\n        if (success) {\r\n          this.loadMessages(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  loadMessages = (clearInput = false) => {\r\n    axios.get(`/api/chat/messages/${this.userId}`)\r\n      .then(response => {\r\n        const { messages } = response.data;\r\n        console.log(messages);\r\n        this.setState({\r\n          messages: messages,\r\n          typedMessage: clearInput ? \"\" : this.state.typedMessage,\r\n        });\r\n      });\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        {this.state.messages.map((message) => \r\n          <Card key={message._id} className={this.props.user && this.props.user._id === message.from._id ? \"text-right\" : \"\"}>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                {message.from.username}\r\n              </Card.Title>\r\n              <Card.Text>\r\n                {message.message}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n        <Form onSubmit={this.onSend}>\r\n          <Form.Group>\r\n            <Form.Control type=\"text\" placeholder=\"Enter message\" onChange={this.handleChange} value={this.state.typedMessage}/>\r\n          </Form.Group>\r\n        </Form>\r\n    </Container>);\r\n  }\r\n}\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass ChatList extends React.Component {\r\n  state = {\r\n    friends: [],\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.loadFriends();\r\n  }\r\n\r\n  loadFriends = () => {\r\n    axios.get('/api/chat').then(response => {\r\n      const { friends } = response.data;\r\n      this.setState({ friends });\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        <ListGroup>\r\n          {this.state.friends.map((friend) =>\r\n            <ListGroup.Item key={friend.to._id}>\r\n              <Link to={`/chat/${friend.to._id}`}>{friend.to.username}</Link>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatList;\r\n","import React from \"react\";\r\nimport { ListGroup, ListGroupItem, Container, Form, Alert } from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nclass SearchPage extends React.Component {\r\n    state = {\r\n        query: \"\",\r\n        results: [],\r\n        message: undefined\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            query: event.target.value\r\n        })\r\n    }\r\n\r\n    onSend = (event) => {\r\n        event.preventDefault();\r\n        axios.get(`/api/user?q=${this.state.query}`)\r\n            .then(response => {\r\n                if (response.data.users.length > 0) {\r\n                    this.setState({\r\n                        results: response.data.users,\r\n                        message: undefined,\r\n                    });\r\n                } else {\r\n                    axios.get(`/api/user`)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                results: response.data.users,\r\n                                message: 'No user found, showing everyone'\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.onSend}>\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"Search\" onChange={this.handleChange} value={this.state.typedMessage}/>\r\n                    </Form.Group>\r\n                </Form>\r\n                {this.state.message &&\r\n                    <Alert variant='danger'>{this.state.message}</Alert>\r\n                }\r\n                {this.state.results.length > 0 &&\r\n                    <ListGroup>\r\n                        {this.state.results.map(item => {\r\n                            return <ListGroupItem>\r\n                                <Link to={`/profile/${item._id}`}>{item.name}</Link>\r\n                            </ListGroupItem>\r\n                        })}\r\n                    </ListGroup>\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Profile from \"./components/Profile\";\r\nimport About from \"./components/About\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\nimport ChatPage from \"./components/ChatPage\";\r\nimport ChatList from \"./components/ChatList\";\r\n// import ToDoList from \"./components/ToDoList\";\r\nimport Post from \"./components/Post\";\r\nimport SearchPage from \"./components/SearchPage\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    user: this.props.user\r\n  };\r\n\r\n  setUser = user => {\r\n    this.setState({\r\n      user: user\r\n    });\r\n  };\r\n\r\n  // componentDidMount = () => {\r\n  //   this.loadUser()\r\n  // }\r\n\r\n  loadUser = () => {\r\n    axios.get(\"/api/auth/loggedin\").then(response => {\r\n      const user = response.data;\r\n      this.setUser(user);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar user={this.state.user} setUser={this.setUser} />\r\n      <Switch>\r\n        <Route\r\n        exact path=\"/\"\r\n        render={props => <Signup setUser={this.setUser} {...props} />}\r\n        />\r\n        <Route\r\n        exact path=\"/login\"\r\n        render={props => <Login setUser={this.setUser} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          exact path=\"/about\"\r\n            render={props => <About {...props} user={this.state.user} loadUser={this.loadUser} />}\r\n        />\r\n\r\n        {/* Route to show another person's profile */}\r\n        <Route\r\n          exact path=\"/posts\"\r\n          render={props => <Profile {...props} user={this.state.user}/> }\r\n          />\r\n      \r\n        <Route\r\n            exact path=\"/profile\"\r\n            render={props => <Profile {...props} user={this.state.user}/> }\r\n        />\r\n        <Route\r\n          exact path=\"/chat/:id\"\r\n          render={props => <ChatPage {...props} user={this.state.user}/>}\r\n        />\r\n\r\n        <Route\r\n          exact path=\"/chat\"\r\n          render={props => <ChatList user={this.state.user}/>}\r\n        />\r\n\r\n          {/* Route to search and list users with links to their profile */}\r\n        <Route\r\n            exact path=\"/search\"\r\n            render={props => <SearchPage user={this.state.user}/>}\r\n        />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}